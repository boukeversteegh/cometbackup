#!/bin/bash

if [ -z $1 ] || [ -z $2 ] || [ $1 == "--help" ] || [ $1 == "-h" ]
then
  echo "Tool for making differential backups."
  echo ""
  echo "usage:  	`basename $0` SOURCE TARGET [--cleanup] [--schedule=SCHEDULE]"
  echo "        	`basename $0` --help"
  if [[ $1 != "--help" ]] && [[ $1 != "-h" ]]
  then
    exit 1
  fi
fi

if [ $1 == "--help" ] || [ $1 == "-h" ]
then
  echo ""
  echo "options:"
  echo "  --cleanup	Remove old backups according to cleanup SCHEDULE after backing up."
  echo "  --schedule    Path to schedule file"
  echo "  --format      Overrides FORMAT"
  echo "  --help, -h	Show this help."
  echo ""
  echo "  SOURCE	Directory to be backed up."
  echo "  TARGET	Directory where all backups will be placed."
  echo "  SCHEDULE	Path to schedule file. Default: schedules/default"
  echo "  FORMAT        Format for naming the backup directories. Use parameters that are accepted by 'date +FORMAT'. Default is '%Y-%m-%d %H:%M:%S'"
  echo ""
  echo "details:"
  echo "  Backups are copied to TARGET/current. A differential copy is made to TARGET/{TIMESTAMP}. You can safely delete any backup - including TARGET/current - without affecting any of the copies."

  exit 0;
fi

PARAMS="$@"
SOURCE=$1
TARGET=$2
FORMAT="%Y-%m-%d %H:%M:%S"
SCHEDULE=`dirname $0`/schedules/default
LOG="false"
LOGFILE="$TARGET/comet.log"
TEST=false
PID="$$"

shift 2
while :
do
  case "$1" in
    --cleanup)
	CLEANUP=true
	shift 1
	;;
    --schedule=*)
	SCHEDULE=${1:11}
	shift 1
	;;
    --format=*)
	FORMAT=${1:9}
	shift 1
	;;
    --log)
        LOG="true"
        shift 1
        ;;
    --test)
       TEST=true
       shift 1
       ;;
    -*)
      echo "Invalid option $1"
      exit 1
      ;;
    *)
	break
	;;
  esac
done

function filelog {
	[ "$LOG" == "true" ] && echo `date` "[$PID]" "$@" >> $LOGFILE;
}

function log {
	filelog "$@";
	echo "$@";
}

filelog "Starting CometBackup"
filelog "  cometbackup $PARAMS"

if [ "$TEST" == "true" ]
then
  #log "Test-mode: No backups and directories will be made."
  echo "SOURCE=$SOURCE"
  echo "TARGET=$TARGET"
  echo "FORMAT=$FORMAT"
  echo "CLEANUP=$CLEANUP"
  echo "SCHEDULE=$SCHEDULE"
  echo "LOGFILE=$LOGFILE"
  echo "LOG=$LOG"
fi

if [ -z $SOURCE ]
then
  echo "Error. SOURCE not set!"
  exit 1
fi

CURRENT_SUBDIR="current"
CURRENT="$TARGET/$CURRENT_SUBDIR"
ARCHIVE_SUBDIR=`date "+$FORMAT"`
ARCHIVE="$TARGET/$ARCHIVE_SUBDIR"
LOCKFILE_COMETBACKUP="$TARGET/.cometbackup.lock"
LOCKFILE_COMETCLEANUP="$TARGET/.cometcleanup.lock"

[ "$TEST" == "false" ] && mkdir -p "$CURRENT" && log "Creating TARGET directory $TARGET"

CMD_BACKUP="rsync -avz \"$SOURCE\" \"$CURRENT\""
CMD_ARCHIVE="cp -lar \"$CURRENT\" \"$ARCHIVE\""


ERROR="false";
lockfile-create --retry 10 "$LOCKFILE_COMETBACKUP" || ERROR="true"
lockfile-touch "$LOCKFILE_COMETBACKUP" &
LOCKPID="$!"

if [ "$ERROR" == true ]
then
	log "ERROR: Another cometbackup process is still running: $TARGET. Canceling backup."
	exit 1;
fi

log "Creating differential backup $SOURCE --> $CURRENT"
log "  $CMD_BACKUP"

[ "$TEST" == "false" ] && eval $CMD_BACKUP;

log "Creating archive copy $CURRENT_SUBDIR --> $ARCHIVE_SUBDIR"
log "  $CMD_ARCHIVE"

[ "$TEST" == "false" ] && eval $CMD_ARCHIVE;

kill "${LOCKPID}"
lockfile-remove "$LOCKFILE_COMETBACKUP"

if [ "$TEST" == "false" ] && [ $CLEANUP ] && [ "$SCHEDULE" ]
then
  export SCHEDULE=$SCHEDULE
  export TARGET=$TARGET
  log "Cleaning up backup directory."
  #ERROR=false && lockfile "$LOCKFILE_COMETCLEANUP" -l 60 -r 10 || ERROR=true
  #if [ "$ERROR" == true ]
  #then
  #  echo "Another cometcleanup process is still running: $TARGET"
  #  exit 1;
  #fi
  `dirname $0`/cometcleanup "$TARGET" "$SCHEDULE"
fi
log "Done."
